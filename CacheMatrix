> 
> makeCacheMatrix <- function(x = matrix()) {
+         inv <- NULL
+         set <- function(y) {
+                 x <<- y
+                 inv <<- NULL
+         }
+         get <- function() x
+         setInverse <- function(inverse) inv <<- inverse
+         getInverse <- function() inv
+         list(set = set,
+              get = get,
+              setInverse = setInverse,
+              getInverse = getInverse)
+ }
> 
> 
 makeCacheMatrix <- function(x = matrix()) {	> 
 > cacheSolve <- function(x, ...) {
}	+         ## Return a matrix that is the inverse of 'x'
 +         inv <- x$getInverse()
 +         if (!is.null(inv)) {
## Write a short comment describing this function	+                 message("getting cached data")
 +                 return(inv)
cacheSolve <- function(x, ...) {	+         }
        ## Return a matrix that is the inverse of 'x'	+         mat <- x$get()
}	+         inv <- solve(mat, ...)
+         x$setInverse(inv)
+         inv
+ }
> 
